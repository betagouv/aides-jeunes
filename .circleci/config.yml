# @see https://github.com/circleci/frontend/blob/master/.circleci/config.yml
# @see https://github.com/CircleCI-Public/circleci-demo-workflows/blob/workspace-forwarding/.circleci/config.yml

# https://circleci.com/blog/circleci-hacks-reuse-yaml-in-your-circleci-config-with-yaml/
defaults: &defaults
  working_directory: ~/mes-aides-ui
  docker:
    # https://circleci.com/docs/2.0/circleci-images/#language-image-variants
    - image: betagouv/mes-aides-docker:latest
    # FIXME
    # mongo 2.4.9 is not available on Docker Hub
    # https://stackoverflow.com/questions/48233357/install-older-version-of-mongodb-with-docker
    - image: mongo:3.2.18
  environment:
    SAUCE_USERNAME: mes-aides-bot
    OPENFISCA_BIND_HOST: 127.0.0.1:2000
    LC_ALL: C.UTF-8
    LANG: C.UTF-8
    PUPPETEER_ARGS: '{"args":["--no-sandbox","--disable-dev-shm-usage"]}'

install_virtualenv: &install_virtualenv
  run:
    name: Install VirtualEnv
    command: |
      curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
      python3 get-pip.py
      pip3 install virtualenv

configure_watai: &configure_watai
  run:
    name: Configure Watai
    command: cp test/integration/config-ci.js test/integration/config.js && rm test/integration/config.json

download_sauce_connect: &download_sauce_connect
  run:
    name: Download Sauce Connect
    command: curl --remote-name https://saucelabs.com/downloads/sc-4.4.12-linux.tar.gz && tar -xzf sc-4.4.12-linux.tar.gz

start_sauce_connect: &start_sauce_connect
  run:
    name: Start Sauce Connect
    command: cd sc-*-linux && ./bin/sc --user $SAUCE_USERNAME --api-key $SAUCE_ACCESS_KEY --tunnel-identifier "circle-$CIRCLE_PROJECT_USERNAME-$CIRCLE_PROJECT_REPONAME-$CIRCLE_BUILD_NUM-$CIRCLE_NODE_INDEX" --readyfile ~/sauce_is_ready
    background: true

start_mes_aides: &start_mes_aides
  run:
    name: Start Mes Aides
    command: |
      cp backend/config/continuous_integration.js backend/config/production.js
      npm start
    background: true

wait_for_sauce_connect: &wait_for_sauce_connect
  run:
    name: Wait for Sauce Connect
    command: while [ ! -e ~/sauce_is_ready ]; do sleep 1; done

wait_for_mes_aides: &wait_for_mes_aides
  run:
    name: Wait for Mes Aides
    command: wget --retry-connrefused --no-check-certificate -T 30 http://localhost:9000

version: 2
jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          name: Restoring node_modules
          keys:
            - v12.1.3-dependencies-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install packages from package-lock.json
          command: npm ci
      - run:
          name: Install SauceLabs
          command: npm install saucelabs@^1.0.1
      - save_cache:
          name: Saving node_modules
          key: v12.1.3-dependencies-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
  install_openfisca:
    <<: *defaults
    steps:
      - checkout
      - *install_virtualenv
      - run:
          name: Create Virtual Env
          command: virtualenv .venv
      - run:
          name: Install OpenFisca
          command: |
            source .venv/bin/activate
            pip3 install -r openfisca/requirements.txt 2> ci-err.log
            test -n ci-err.log && grep incompatible ci-err.log && cat ci-err.log && exit 1
            rm ci-err.log
            deactivate
      - persist_to_workspace:
          root: .
          paths:
            - ".venv"
  lint:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/mes-aides-ui
      - run:
          name: JSHint
          command: npm run lint
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/mes-aides-ui
      - run:
          name: Build assets
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - dist
  test_mocha:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/mes-aides-ui
      - run:
          name: Mocha
          command: npm run test:mocha
  test_karma:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/mes-aides-ui
      - run:
          name: Karma
          command: npm run test:karma
  test_secret_concealment:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/mes-aides-ui
      - run:
          command: '! grep this-text-should-not-appear dist/js/**/*.js'
  test_jest:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/mes-aides-ui
      - run:
          name: Jest
          command: npm run test:jest
  test_selenium_chrome:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/mes-aides-ui
      - *install_virtualenv
      - run:
          name: Start OpenFisca
          command: |
            source .venv/bin/activate
            gunicorn api --chdir openfisca/ --config openfisca/config.py --preload --log-level debug --log-file=-
            deactivate
          background: true
      - run:
          name: Wait for OpenFisca
          command: wget --retry-connrefused --waitretry=1 --output-document=/dev/null http://localhost:2000/variable/parisien
      - *configure_watai
      - *download_sauce_connect
      - *start_sauce_connect
      - *start_mes_aides
      - *wait_for_sauce_connect
      - *wait_for_mes_aides
      - run:
          name: Watai base suite
          command: node_modules/.bin/watai test/integration/base-suite --config '{"driverCapabilities":{"browserName":"chrome","version":"latest","chromeOptions":{"args":["lang=fr-FR"]}}}'
      - run:
          name: Watai family suite
          command: node_modules/.bin/watai test/integration/family-suite  --config '{"driverCapabilities":{"browserName":"chrome","version":"latest","chromeOptions":{"args":["lang=fr-FR"]}}}'
  test_openfisca_test_generation:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/mes-aides-ui
      - *install_virtualenv
      - run:
          name: Check OpenFisca test generation
          command: |
            source .venv/bin/activate
            npm run test:openfisca
  deploy:
    machine:
      enabled: true
    steps:
      - run:
          name: Deploy on production
          command: |
            ssh root@metal.mes-aides.gouv.fr

workflows:
  version: 2
  build_and_test:
    jobs:
      - install_openfisca
      - install
      - lint:
          requires:
            - install
      - build:
          requires:
            - lint
      - test_mocha:
          requires:
            - build
      - test_secret_concealment:
          requires:
            - build
      - test_karma:
          requires:
            - build
      - test_jest:
          requires:
            - build
      - test_selenium_chrome:
          requires:
            - install_openfisca
            - test_mocha
            - test_karma
            - test_jest
      - test_openfisca_test_generation:
          requires:
            - install
            - install_openfisca
      - deploy:
          requires:
            - test_selenium_chrome
            - test_openfisca_test_generation
          filters:
            branches:
              only: master
