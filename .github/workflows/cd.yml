name: "Continuous Deployment"
on:
  push:
    branches: [master, dev]
  # to be removed before merge
  pull_request:
env:
  SSH_HOST: solstice.mes-aides.1jeune1solution.beta.gouv.fr
  SSH_USER: root

jobs:
  unit_testing:
    name: Unit testing
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache NPM install files
        uses: actions/cache@v3
        id: restore-npm-install-packages
        with:
          path: ~/.npm
          key: ${{ runner.os }}-cache-npm-${{ hashFiles('**/package-lock.json') }}
      - name: Cache node modules
        uses: actions/cache@v3
        id: restore-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Check current directory
        run: ls -la
      - name: Install dependencies
        if: steps.restore-dependencies.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --no-audit
      - name: Jest
        run: npm run test
  deploy_production:
    # "false" to be removed before merge
    if: false && github.ref == 'refs/heads/master'
    needs: [unit_testing]
    name: Production deployment
    runs-on: ubuntu-20.04
    steps:
      - name: Production deployment
        shell: bash
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.PRODUCTION_DEPLOY_KEY }}" > ~/.ssh/deployment.key
          chmod 600 ~/.ssh/deployment.key
          ssh -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SSH_HOST }} -i ~/.ssh/deployment.key
  deploy_preproduction:
    # "false" to be removed before merge
    if: false && github.ref == 'refs/heads/dev'
    needs: [unit_testing]
    name: Preproduction Deployment
    runs-on: ubuntu-20.04
    steps:
      - name: Preproduction Deployment
        shell: bash
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.PREPRODUCTION_DEPLOY_KEY }}" > ~/.ssh/deployment.key
          chmod 600 ~/.ssh/deployment.key
          ssh -o StrictHostKeyChecking=no ${{ env.SSH_USER }}@${{ env.SSH_HOST }} -i ~/.ssh/deployment.key
